# Git bash commands

# Create files in current directory
$ touch file_name.file_extension

# Initiate repository in current directory
$ git init

# Set user name for repository
$ git config --global user.name 'Pablo N. Granell'

# Set email for user
$ git config --global user.email 'granellpablo@gmail.com'

# Stage files (include in what will be commited)
$ git add <file>  # add just this file
$ git add *.html  # add all html files
$ git add .       # add everything in the directory


# Unstage file
$ git rm --cached <file>

$ git status

# Commit, enter comments in associated editor
$ git commit
# Set default editor (will wait for editor to close)
$ git config --global core.editor "atom --wait"

# Commit without opening editor
$ git commit -m 'Type comment here'

 # Commit without previously adding changes and without opening editor
 $ git commit -a -m 'Type comment here'  # Doesn't work for new files, add them before

# Ignore files or folders for commit
$ touch .gitignore   # Then, list files to ignore in this file

# Create branch
$ git branch branch_name

# Switch to branch
$ git checkout branch_name


# Two ways of merging branches (after changes have been made):

# 1) Merge branch directly
$ git commit ...         # do this in branch
$ git checkout master
$ git merge branch_name  # do this in master branch, then push

# 2) By pull request
$ git commit ...        # do this in branch
$ git push              # do this in branch
# This will make the branch appear on GitHub, a pull request should the be
# created to merge the branch



# List remote repository
$ git remote

# Add remote repository
$ git remote add origin https:// Repo_URL

# Push commits to remote repository (only first time)
$ git push -u origin master
# Push commits
$ git push

# Clone repository
$ git clone https:// Repo_URL

# Update repository (if changes were made later)
$ git pull






modifico
